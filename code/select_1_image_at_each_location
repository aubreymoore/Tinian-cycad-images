{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "955e19d8-a4d8-4240-8920-b221b919d7e0",
   "metadata": {},
   "source": [
    "# select_1_image_at_each_location\n",
    "\n",
    "Ken Puliafico kindly provided high quality images of *Cycas micronesica* growing on Tinian, some of which clearly show infestation by a scale insect, probably *Aulacaspis yasumatsui* (CAS).\n",
    "\n",
    "I want to use QGIS to display these images on a web map. But there is a problem: at most locations multiple images were taken. When mapped, only one point and one image is displayed. \n",
    "The code in this **Jupyter notebook** puts all images from each location into a single directory.\n",
    "\n",
    "The next step is to manually select the **best image** from each directory. In this case the **best image** is one which which indicates presence of absence of **CAS**."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "6030621e-433b-412f-a1e1-5b65993e6122",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from glob import glob\n",
    "from GPSPhoto import gpsphoto\n",
    "import os\n",
    "import shutil"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "25a81d73-87b7-47ff-8e11-aab0e45833f9",
   "metadata": {},
   "source": [
    "### Extract georeferences from images stored in the *images* directory and store these data in a pandas dataframe"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "675afa41-e8ef-46a5-a88d-e429bba246f4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Altitude</th>\n",
       "      <th>UTC-Time</th>\n",
       "      <th>Date</th>\n",
       "      <th>imagefile</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>15.050625</td>\n",
       "      <td>145.637681</td>\n",
       "      <td>124.74</td>\n",
       "      <td>1:54:6</td>\n",
       "      <td>07/29/2021</td>\n",
       "      <td>../images/PXL_20210729_015415398.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.055214</td>\n",
       "      <td>145.639239</td>\n",
       "      <td>130.54</td>\n",
       "      <td>7:14:3</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_071422991.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15.055247</td>\n",
       "      <td>145.639358</td>\n",
       "      <td>130.17</td>\n",
       "      <td>7:9:49</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_070959525.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15.041333</td>\n",
       "      <td>145.629769</td>\n",
       "      <td>203.97</td>\n",
       "      <td>4:3:32</td>\n",
       "      <td>07/25/2021</td>\n",
       "      <td>../images/PXL_20210725_040342814.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15.055286</td>\n",
       "      <td>145.639233</td>\n",
       "      <td>122.21</td>\n",
       "      <td>7:11:16</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_071121560.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>15.055214</td>\n",
       "      <td>145.639239</td>\n",
       "      <td>130.55</td>\n",
       "      <td>7:13:46</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_071348906.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>15.055286</td>\n",
       "      <td>145.639233</td>\n",
       "      <td>122.21</td>\n",
       "      <td>7:11:40</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_071206988.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>15.055247</td>\n",
       "      <td>145.639358</td>\n",
       "      <td>130.17</td>\n",
       "      <td>7:9:49</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_070954271.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>15.041333</td>\n",
       "      <td>145.629769</td>\n",
       "      <td>203.97</td>\n",
       "      <td>4:3:53</td>\n",
       "      <td>07/25/2021</td>\n",
       "      <td>../images/PXL_20210725_040424143.jpg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>15.055400</td>\n",
       "      <td>145.639264</td>\n",
       "      <td>130.21</td>\n",
       "      <td>7:15:25</td>\n",
       "      <td>07/24/2021</td>\n",
       "      <td>../images/PXL_20210724_071526719.jpg</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>81 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Latitude   Longitude  Altitude UTC-Time        Date  \\\n",
       "0   15.050625  145.637681    124.74   1:54:6  07/29/2021   \n",
       "1   15.055214  145.639239    130.54   7:14:3  07/24/2021   \n",
       "2   15.055247  145.639358    130.17   7:9:49  07/24/2021   \n",
       "3   15.041333  145.629769    203.97   4:3:32  07/25/2021   \n",
       "4   15.055286  145.639233    122.21  7:11:16  07/24/2021   \n",
       "..        ...         ...       ...      ...         ...   \n",
       "76  15.055214  145.639239    130.55  7:13:46  07/24/2021   \n",
       "77  15.055286  145.639233    122.21  7:11:40  07/24/2021   \n",
       "78  15.055247  145.639358    130.17   7:9:49  07/24/2021   \n",
       "79  15.041333  145.629769    203.97   4:3:53  07/25/2021   \n",
       "80  15.055400  145.639264    130.21  7:15:25  07/24/2021   \n",
       "\n",
       "                               imagefile  \n",
       "0   ../images/PXL_20210729_015415398.jpg  \n",
       "1   ../images/PXL_20210724_071422991.jpg  \n",
       "2   ../images/PXL_20210724_070959525.jpg  \n",
       "3   ../images/PXL_20210725_040342814.jpg  \n",
       "4   ../images/PXL_20210724_071121560.jpg  \n",
       "..                                   ...  \n",
       "76  ../images/PXL_20210724_071348906.jpg  \n",
       "77  ../images/PXL_20210724_071206988.jpg  \n",
       "78  ../images/PXL_20210724_070954271.jpg  \n",
       "79  ../images/PXL_20210725_040424143.jpg  \n",
       "80  ../images/PXL_20210724_071526719.jpg  \n",
       "\n",
       "[81 rows x 6 columns]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "imagelist = []\n",
    "for imagefile in glob('../images/*.jpg'):\n",
    "    mydict = gpsphoto.getGPSData(imagefile)\n",
    "    mydict['imagefile'] = imagefile\n",
    "    imagelist.append(mydict)\n",
    "df = pd.DataFrame(imagelist)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "8e4b3680-5196-4e6f-b754-a776aeea888f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>Altitude</th>\n",
       "      <th>UTC-Time</th>\n",
       "      <th>Date</th>\n",
       "      <th>imagefile</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>../images/PXL_20210724_070242581.jpg</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Latitude  Longitude  Altitude UTC-Time Date  \\\n",
       "72       0.0        0.0       NaN      NaN  NaN   \n",
       "\n",
       "                               imagefile  \n",
       "72  ../images/PXL_20210724_070242581.jpg  "
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# drop rows where latitude and Longitude are 0.0\n",
    "df.loc[df[\"Latitude\"] == 0.0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "87ae47cb-5191-4e0b-8245-d47345af77e5",
   "metadata": {},
   "source": [
    "### Group by **Latitude** and **Longitude** and make a list of images taken at each location"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "9659b3e7-6d1f-42e0-9264-5ae38cb88c43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>imagefile</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>[../images/PXL_20210724_070242581.jpg]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.041333</td>\n",
       "      <td>145.629769</td>\n",
       "      <td>[../images/PXL_20210725_040342814.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15.042053</td>\n",
       "      <td>145.628667</td>\n",
       "      <td>[../images/PXL_20210725_040330535.jpg]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15.050522</td>\n",
       "      <td>145.637697</td>\n",
       "      <td>[../images/PXL_20210729_015526414.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15.050625</td>\n",
       "      <td>145.637681</td>\n",
       "      <td>[../images/PXL_20210729_015415398.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>15.055200</td>\n",
       "      <td>145.639231</td>\n",
       "      <td>[../images/PXL_20210724_071318940.jpg]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>15.055214</td>\n",
       "      <td>145.639239</td>\n",
       "      <td>[../images/PXL_20210724_071422991.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>15.055247</td>\n",
       "      <td>145.639358</td>\n",
       "      <td>[../images/PXL_20210724_070959525.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>15.055286</td>\n",
       "      <td>145.639233</td>\n",
       "      <td>[../images/PXL_20210724_071121560.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>15.055289</td>\n",
       "      <td>145.639522</td>\n",
       "      <td>[../images/PXL_20210724_070329798.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>15.055400</td>\n",
       "      <td>145.639264</td>\n",
       "      <td>[../images/PXL_20210724_071606450.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Latitude   Longitude                                          imagefile\n",
       "0    0.000000    0.000000             [../images/PXL_20210724_070242581.jpg]\n",
       "1   15.041333  145.629769  [../images/PXL_20210725_040342814.jpg, ../imag...\n",
       "2   15.042053  145.628667             [../images/PXL_20210725_040330535.jpg]\n",
       "3   15.050522  145.637697  [../images/PXL_20210729_015526414.jpg, ../imag...\n",
       "4   15.050625  145.637681  [../images/PXL_20210729_015415398.jpg, ../imag...\n",
       "5   15.055200  145.639231             [../images/PXL_20210724_071318940.jpg]\n",
       "6   15.055214  145.639239  [../images/PXL_20210724_071422991.jpg, ../imag...\n",
       "7   15.055247  145.639358  [../images/PXL_20210724_070959525.jpg, ../imag...\n",
       "8   15.055286  145.639233  [../images/PXL_20210724_071121560.jpg, ../imag...\n",
       "9   15.055289  145.639522  [../images/PXL_20210724_070329798.jpg, ../imag...\n",
       "10  15.055400  145.639264  [../images/PXL_20210724_071606450.jpg, ../imag..."
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Group rows on Latitude and Longitude and get list for imagefile column\n",
    "df2 = df.groupby(['Latitude','Longitude'])['imagefile'].apply(list).reset_index()\n",
    "df2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ba9858f-9c6c-4482-816c-61577a6fd4e2",
   "metadata": {},
   "source": [
    "### Drop the single row with coordinates 0, 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "238b77c3-afab-486a-8815-2fd0b79ca23c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Latitude</th>\n",
       "      <th>Longitude</th>\n",
       "      <th>imagefile</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>15.041333</td>\n",
       "      <td>145.629769</td>\n",
       "      <td>[../images/PXL_20210725_040342814.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>15.042053</td>\n",
       "      <td>145.628667</td>\n",
       "      <td>[../images/PXL_20210725_040330535.jpg]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>15.050522</td>\n",
       "      <td>145.637697</td>\n",
       "      <td>[../images/PXL_20210729_015526414.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>15.050625</td>\n",
       "      <td>145.637681</td>\n",
       "      <td>[../images/PXL_20210729_015415398.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>15.055200</td>\n",
       "      <td>145.639231</td>\n",
       "      <td>[../images/PXL_20210724_071318940.jpg]</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>15.055214</td>\n",
       "      <td>145.639239</td>\n",
       "      <td>[../images/PXL_20210724_071422991.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>15.055247</td>\n",
       "      <td>145.639358</td>\n",
       "      <td>[../images/PXL_20210724_070959525.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>15.055286</td>\n",
       "      <td>145.639233</td>\n",
       "      <td>[../images/PXL_20210724_071121560.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>15.055289</td>\n",
       "      <td>145.639522</td>\n",
       "      <td>[../images/PXL_20210724_070329798.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>15.055400</td>\n",
       "      <td>145.639264</td>\n",
       "      <td>[../images/PXL_20210724_071606450.jpg, ../imag...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Latitude   Longitude                                          imagefile\n",
       "1   15.041333  145.629769  [../images/PXL_20210725_040342814.jpg, ../imag...\n",
       "2   15.042053  145.628667             [../images/PXL_20210725_040330535.jpg]\n",
       "3   15.050522  145.637697  [../images/PXL_20210729_015526414.jpg, ../imag...\n",
       "4   15.050625  145.637681  [../images/PXL_20210729_015415398.jpg, ../imag...\n",
       "5   15.055200  145.639231             [../images/PXL_20210724_071318940.jpg]\n",
       "6   15.055214  145.639239  [../images/PXL_20210724_071422991.jpg, ../imag...\n",
       "7   15.055247  145.639358  [../images/PXL_20210724_070959525.jpg, ../imag...\n",
       "8   15.055286  145.639233  [../images/PXL_20210724_071121560.jpg, ../imag...\n",
       "9   15.055289  145.639522  [../images/PXL_20210724_070329798.jpg, ../imag...\n",
       "10  15.055400  145.639264  [../images/PXL_20210724_071606450.jpg, ../imag..."
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.drop(df2[df2['Latitude'] == 0.0].index, inplace = True)\n",
    "df2"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7ed5119-46f4-4e97-88fd-81425ab61baf",
   "metadata": {},
   "source": [
    "### Put all images from each location into a single directory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "c5aec1df-2e65-4d4e-ab03-ccde0089b80b",
   "metadata": {},
   "outputs": [],
   "source": [
    "shutil.rmtree('../images/image_groups')\n",
    "for i, r in df2.iterrows():\n",
    "    target_dir = f'../images/image_groups/group{i}'\n",
    "    os.makedirs(target_dir)\n",
    "    for imagefile in r.imagefile:\n",
    "        shutil.copy(imagefile, target_dir)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4253e8a7-3fb3-47dc-8d7d-54230e7b03e1",
   "metadata": {},
   "source": [
    "### The next step is to manually select the **best image** from each directory. In this case the **best image** is one which which indicates presence of absence of **CAS**."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
